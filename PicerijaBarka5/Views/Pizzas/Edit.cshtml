@model PicerijaBarka5.Models.Dtos.PizzaDto
@using PicerijaBarka5.Models
@using PicerijaBarka5.Services

@{
    ViewBag.Title = "Edit";
    //Prefill arrays
    var availableIngredients = Repository.GetInstance().GetIngredients();
    var doughs = availableIngredients.Where(x => x.IngredientType == IngredientType.Dough);
    var meats = availableIngredients.Where(x => x.IngredientType == IngredientType.Meat);
    var cheeses = availableIngredients.Where(x => x.IngredientType == IngredientType.Cheese);
    var sauces = availableIngredients.Where(x => x.IngredientType == IngredientType.Sauce);
    var vegetables = availableIngredients.Where(x => x.IngredientType == IngredientType.Vegetable);

}
<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Pizza</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PizzaId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        @* new code *@
        <div class="col-md-6">
            @Html.ValidationSummary(false, "", new { @class = "text-danger ml-0" })

            <div class="form-group">
                <label class="row font-weight-bold">Choose your dough: </label>
                @foreach (var dough in doughs)
                {
                    <div class="m-1">
                        <input type="radio" value="@dough.IngredientId" name="Ingredients" id="@dough.IngredientId" class="form-check-input" />
                        @Html.Label(dough.Name, htmlAttributes: new { @for = dough.IngredientId, @class = "form-check-label" })
                    </div>
                }
            </div>

            <div class="form-group">
                <label class="row font-weight-bold">Choose your meats: </label>
                @foreach (var meat in meats)
                {
                    <div class="m-1">
                        <input type="checkbox" value="@meat.IngredientId" id="@meat.IngredientId" name="Ingredients" class="form-check-input" />
                        @Html.Label(meat.Name, htmlAttributes: new { @for = meat.IngredientId, @class = "form-check-label" })
                    </div>
                }
            </div>

            <div class="form-group">
                <label class="row font-weight-bold">Choose your cheeses: </label>
                @foreach (var cheese in cheeses)
                {
                    <div class="m-1">
                        <input type="checkbox" value="@cheese.IngredientId" id="@cheese.IngredientId" name="Ingredients" class="form-check-input" />
                        @Html.Label(cheese.Name, htmlAttributes: new { @for = cheese.IngredientId, @class = "form-check-label" })
                    </div>
                }
            </div>

            <div class="form-group">
                <label class="row font-weight-bold">Choose your sauces: </label>
                @foreach (var sauce in sauces)
                {
                    <div class="m-1">
                        <input type="checkbox" value="@sauce.IngredientId" id="@sauce.IngredientId" name="Ingredients" class="form-check-input" />
                        @Html.Label(sauce.Name, htmlAttributes: new { @for = sauce.IngredientId, @class = "form-check-label" })
                    </div>
                }
            </div>

            <div class="form-group">
                <label class="row font-weight-bold">Choose your vegetables: </label>
                @foreach (var vegetable in vegetables)
                {
                    <div class="m-1">
                        <input type="checkbox" value="@vegetable.IngredientId" id="@vegetable.IngredientId" name="Ingredients" class="form-check-input" />
                        @Html.Label(vegetable.Name, htmlAttributes: new { @for = vegetable.IngredientId, @class = "form-check-label" })
                    </div>
                }
            </div>
        </div>
        @* new code end *@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-warning" />
                @Html.ActionLink("Back to List", "Index", routeValues: null, htmlAttributes: new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
