@model PicerijaBarka5.Models.CreatePizzaViewModel
@using PicerijaBarka5.Models
@using PicerijaBarka5.Models.Dtos
@{
    ViewBag.Title = "Create";
}
<h2>Create</h2>

<style>
    input[type=checkbox] + label, input[type=radio] + label {
        background-color: lightgray;
        color: black;
    }

    input[type=checkbox]:checked + label, input[type=radio]:checked + label {
        background-color: black;
        color: darkorange;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form">
        <h4>Pizza</h4>
        <hr />
        <div class="row container">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.IncomeCoef, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.IncomeCoef, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IncomeCoef, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                @Html.ValidationSummary(true, "", new { @class = "text-danger ml-0" })
                @{
                    var boxType = "radio";
                    var flag = true;
                }
                @foreach (var list in Model.TypeIngredientListPairs)
                {
                    <div class="form-group">
                        <label class="row font-weight-bold">Choose your @list.Key: </label>
                        @foreach (var item in list.Value)
                        {
                            <div class="m-1 d-inline-block">
                                <input type=@boxType value="@item.IngredientId" name="selectedIngredients" id="@item.IngredientId" class="form-check-input" hidden />
                                @Html.Label(item.Name, htmlAttributes: new { @for = item.IngredientId, @class = "form-check-label toggle" })
                            </div>
                        }
                    </div>
                    if (flag)
                    {
                        boxType = "checkbox";
                        flag = false;
                    }
                }

            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
                @Html.ActionLink("Back to List", "Index", routeValues: null, htmlAttributes: new { @class = "btn btn-primary" })
                @Html.ActionLink("Add to cart", "Index", routeValues: null, htmlAttributes: new { @class = "btn btn-primary" })
            </div>
        </div>

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
