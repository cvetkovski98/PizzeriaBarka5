@model PicerijaBarka5.Models.CreatePizzaViewModel
@{
    ViewBag.Title = "Create";
}


    <section style="margin-top: 80px">


        @using (Html.BeginForm("Create", "Pizzas", FormMethod.Post,
            new { enctype = "multipart/form-data" }))
        {
          

            @Html.AntiForgeryToken()

        <div class="form">
            <h4>Create your pizza</h4>
            <hr />
            <div class="row container">
                <div class="col-md-5">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IncomeCoef, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.IncomeCoef, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IncomeCoef, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @if (User.IsInRole("Owner"))
                    {
                    <div class="mb-4 pb-4">
                        <label for="file">Upload Image:</label>
                        <input type="file" id="file" class="btn btn-outline-dark" name="file" style="width: 100%;" />
                    </div>
                    }
                </div>
                <div class="col-md-7">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger ml-0" })
                    @{
                        var boxType = "radio";
                        var flag = true;
                    }
                    @foreach (var list in Model.TypeIngredientListPairs)
                    {
                        <div class="form-group">
                            <label class="row ml-2 font-weight-bold">Choose your @list.Key: </label>
                            @foreach (var item in list.Value)
                            {
                                <div class="m-1 d-inline-block">
                                    <input type=@boxType value="@item.IngredientId" name="selectedIngredients" id="@item.IngredientId" class="form-check-input toggle" hidden />
                                    @Html.Label(item.Name, htmlAttributes: new { @for = item.IngredientId, @class = "form-check-label btn toggle-label" })
                                </div>
                            }
                        </div>
                        if (flag)
                        {
                            boxType = "checkbox";
                            flag = false;
                        }
                    }

                </div>
            </div>
            
            <div class="form-group row">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-success" />
                    @Html.ActionLink("Back to List", "Index", routeValues: null, htmlAttributes: new { @class = "btn btn-primary" })
                </div>
            </div>

        </div>
        }
    </section>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
