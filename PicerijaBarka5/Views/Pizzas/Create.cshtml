@model PicerijaBarka5.Models.CreatePizzaViewModel
@using PicerijaBarka5.Models
@{
    ViewBag.Title = "Create";
}

@{
    //Prefill arrays

    var doughs = Model.availableIngredients.Where(x => x.IngredientType == IngredientType.Dough);
    var meats = Model.availableIngredients.Where(x => x.IngredientType == IngredientType.Meat);
    var cheeses = Model.availableIngredients.Where(x => x.IngredientType == IngredientType.Cheese);
    var sauces = Model.availableIngredients.Where(x => x.IngredientType == IngredientType.Sauce);
    var vegetables = Model.availableIngredients.Where(x => x.IngredientType == IngredientType.Vegetable);

}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form">
        <h4>Pizza</h4>
        <hr />
        <div class="row container">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.IncomeCoef, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.IncomeCoef, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IncomeCoef, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                @Html.ValidationSummary(false, "", new { @class = "text-danger ml-0" })

                <div class="form-group">
                    <label class="row font-weight-bold">Choose your dough: </label>
                    @foreach (var dough in doughs)
                    {
                        <div class="m-1">
                            <input type="radio" value="@dough.IngredientId" name="selectedIngredients" id="@dough.IngredientId" class="form-check-input" />
                            @Html.Label(dough.Name, htmlAttributes: new { @for = dough.IngredientId, @class = "form-check-label" })
                        </div>
                    }
                </div>

                <div class="form-group">
                    <label class="row font-weight-bold">Choose your meats: </label>
                    @foreach (var meat in meats)
                    {
                        <div class="m-1">
                            <input type="checkbox" value="@meat.IngredientId" id="@meat.IngredientId" name="selectedIngredients" class="form-check-input" />
                            @Html.Label(meat.Name, htmlAttributes: new { @for = meat.IngredientId, @class = "form-check-label" })
                        </div>
                    }
                </div>

                <div class="form-group">
                    <label class="row font-weight-bold">Choose your cheeses: </label>
                    @foreach (var cheese in cheeses)
                    {
                        <div class="m-1">
                            <input type="checkbox" value="@cheese.IngredientId" id="@cheese.IngredientId" name="selectedIngredients" class="form-check-input" />
                            @Html.Label(cheese.Name, htmlAttributes: new { @for = cheese.IngredientId, @class = "form-check-label" })
                        </div>
                    }
                </div>

                <div class="form-group">
                    <label class="row font-weight-bold">Choose your sauces: </label>
                    @foreach (var sauce in sauces)
                    {
                        <div class="m-1">
                            <input type="checkbox" value="@sauce.IngredientId" id="@sauce.IngredientId" name="selectedIngredients" class="form-check-input" />
                            @Html.Label(sauce.Name, htmlAttributes: new { @for = sauce.IngredientId, @class = "form-check-label" })
                        </div>
                    }
                </div>

                <div class="form-group">
                    <label class="row font-weight-bold">Choose your vegetables: </label>
                    @foreach (var vegetable in vegetables)
                    {
                        <div class="m-1">
                            <input type="checkbox" value="@vegetable.IngredientId" id="@vegetable.IngredientId" name="selectedIngredients" class="form-check-input" />
                            @Html.Label(vegetable.Name, htmlAttributes: new { @for = vegetable.IngredientId, @class = "form-check-label" })
                        </div>
                    }
                </div>
            </div>

        </div>
        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
                @Html.ActionLink("Back to List", "Index", routeValues: null, htmlAttributes: new { @class = "btn btn-primary" })
                @Html.ActionLink("Add to cart", "Index", routeValues: null, htmlAttributes: new { @class = "btn btn-primary" })
            </div>
        </div>

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
