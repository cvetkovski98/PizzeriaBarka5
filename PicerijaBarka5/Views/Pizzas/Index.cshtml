@model IEnumerable<PicerijaBarka5.Models.Dtos.PizzaDto>
<section style="margin-top: 80px">
    <h1 class="my-5 ml-5">@ViewBag.Title</h1>
    @{
        var firstRow = true;
        var end = 0;
    }

    @{
        if (Model.Count() == 0)
        {
            <div class="card text-white bg-dark mb-3 col-3 hoverable" title="Add new">
                <a href="@Url.Action("Create")" class="custom-card-link">
                    <div class="card-body" style="width: inherit; height: inherit">
                        <h5 class="card-title">Create new</h5>
                        <hr class="red ml-0 mx-0" />
                        <div class="text-center" style="min-height: 100px">
                            <i class="fa fa-plus mt-4 fa-3x"></i>
                        </div>
                    </div>
                </a>
            </div>
        }
    }

    @for (int j = 0; j < Model.Count();)
    {
        <div class="card-deck">
            @{ if (firstRow)
                {
                    <div class="card text-white bg-dark mb-3 hoverable" title="Add new">
                        <a href="@Url.Action("Create")" class="custom-card-link">
                            <div class="card-body" style="min-height:200px">
                                <h5 class="card-title">Create new</h5>
                                <hr class="red ml-0 mx-0" />
                                <div class="text-center" style="min-height: 100px">
                                    <i class="fa fa-plus mt-5 fa-3x"></i>
                                </div>
                            </div>
                        </a>
                    </div>
                    end = 2;
                    firstRow = false;
                }
                else
                {
                    end = 3;
                }
            }
            @for (int i = 0; i < end; i++)
            {
                if (j < Model.Count())
                {
                    var item = Model.ElementAt(j);

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "Pizzas", FormMethod.Get))
{
    <p>
        Find by name:  @Html.TextBox("SearchString", null, new { id = "searchPizza", @class = "form-control d-inline" })

        <input type="submit" value="Search" class="btn btn-outline d-inline" />
    </p>
}


<table id="pizzaTable" class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
            <a href="@Url.Action("Index", "Pizzas", new { sortBy = ViewBag.SortingName })"><i class="fa fa-sort ml-4"></i></a>
          

        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
            <a href="@Url.Action("Index", "Pizzas", new { sortBy = ViewBag.SortingName })"><i class="fa fa-sort ml-4"></i></a>
        </th>
        <th></th>
    </tr>
                    <div class="card text-white bg-dark mb-3 hoverable" title="View details">
                        <a href="@Url.Action("Details", new { id = item.PizzaId })" class="custom-card-link">
                            <div class="card-body" style="min-height: 250px">
                                <h5 class="card-title pb-0">@item.Name</h5>
                                <hr class="red ml-0 mx-0" />
                                <p class="card-text">
                                    @string.Join(", ", item.Ingredients.Select(x => x.Name).ToList())
                                </p>
                            </div>
                        </a>
                        <div class="card-footer">
                            @Html.ActionLink("Edit", "Edit", new { id = item.PizzaId }, new { @class = "btn bg-orange text-white" })
                            @Html.ActionLink("Delete", "Delete", new { id = item.PizzaId }, new { @class = "btn bg-danger text-white" })
                            <button class="btn btn-success addToCart" pizza-id="@item.PizzaId">Add to cart</button>
                            <span class="float-right mt-2">@Math.Round(item.Price) den.</span>
                        </div>
                    </div>
                }
                j++;
            }
        </div>
    }
</section>

    @foreach (var item in Model)
    {
        <tr class="Search">
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @item.getPrice()
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.PizzaId }) |
                @Html.ActionLink("Details", "Details", new { id = item.PizzaId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.PizzaId })
            </td>
        </tr>
    }

</table>
  



@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {

            function Contains(text_one, text_two) {
                if (text_one.indexOf(text_two) != -1)
                    return true;
            }
         
            $('#searchPizza').keyup(function () {
                var searchText = $("#searchPizza").val().toLowerCase();
                $(".Search").each(function () {
                    if (!Contains($(this).text().toLowerCase(), searchText)) {
                        $(this).hide();
                    }
                    else {
                        $(this).show();
                    }
                });
            });
        });
    </script>

 
}
@section scripts{
    <script>
        $(document).ready(function () {
            $(".addToCart").on('click', function () {
                let id = $(this).attr('pizza-id');
                console.log(id)
                $.ajax({
                    type: "POST",
                    url: "/Cart/AddToCart/" + id,
                    success: function () {
                        alert("Pizza added to cart");
                    }
                })
            })
        })
    </script>
}
